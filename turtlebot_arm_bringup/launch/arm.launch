<launch>
  <!-- To use, first set Environment variable TURTLEBOT_ARM1 to either:
   turtlebot or pincher (for Trossen PhantomX Pincher) -->
   
  <arg name="simulation" default="false"/>

  <!-- Include Calibration -->
  <!--Here we broadcast our final coordinate system for the gripper, since gripper_finger_base_link from the arbotix package is
      not centered at the gripper for our PhantomX Pincher arm. We choose the name gripper_link since the turtlebot_arm package depends on it. -->
  <!-- <include file="$(find turtlebot_arm_kinect_calibration)/launch/transformation_calibrated.launch"> -->


  <!-- Unfortunately, we need a virtual helper joint that is part of the URDF -->
  <node name="fake_joint_pub" pkg="turtlebot_arm_description" type="fake_joint_pub.py" output="screen"/> 

  <!-- Now load robot model -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find turtlebot_arm_description)/urdf/pincher_arm.urdf.xacro'"/>
  <node name="robot_state_pub" pkg="robot_state_publisher" type="robot_state_publisher"/>

  <!-- Start Arbotix driver -->
  <node name="arbotix" pkg="arbotix_python" type="arbotix_driver" output="screen">
    <rosparam file="$(find phantomx_rst)/config/pincher_arm.yaml" command="load"/>
    <param name="sim" value="$(arg simulation)"/>
  </node>

  <!-- Start gripper controller -->
  <node name="gripper_controller" pkg="arbotix_controllers" type="gripper_controller" output="screen">
    <rosparam file="$(find phantomx_rst)/config/pincher_gripper.yaml" command="load" />
  </node>
</launch>
